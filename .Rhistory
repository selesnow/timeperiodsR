getwd()
sewd("..")
setwd("..")
getwd()
devtools::build_vignettes()
weekdays(SSys.Date(), TRUE)
weekdays(Sys.Date(), TRUE)
weekdays(Sys.Date(), FALSE)
#
my_dates <- c("2019-09-01", "2019-09-10", "2019-09-23")
# преобразуем текст в дату
my_dates <- as.Date(my_dates)
reprex::reprex()
reprex::reprex()
months(my_dates)
quarters(my_dates)
Sys.Date()
day(my_dates)
days(my_dates)
Sys.localeconv()
weekdays(my_dates)
months(my_dates)
quarters(my_dates)
years(my_dates)
as.Date('April 26, 2001',format='%B %d, mon')
format(my_dates, "mon")
format(my_dates, "%mon")
format(my_dates, "%B")
getOption("timeperiodsR.official_day_offs_pre")
devtools::load_all(".")
pre=pre
getOption("timeperiodsR.official_day_offs_pre")
devtools::load_all(".")
getOption("timeperiodsR.official_day_offs_pre")
ans <- httr::GET("https://isdayoff.ru/api/getdata",
query = list(
year=2023,
month=6,
day = 4,
cc='ua',
pre=1
)
)
ans
httr::content(ans, encoding = "UTF-8")
httr::status_code(ans)
httr::status_code(ans)==200
httr::status_code(ans)!=200
ans <- httr::GET("https://isdayoff.ru/api/getdata",
query = list(
year=2023,
month=16,
day = 4,
cc='ua',
pre=1
))
ans
httr::status_code(ans)
httr::content(ans, encoding = "UTF-8")
ans
httr::http_error(ans)
ans <- httr::GET("https://isdayoff.ru/api/getdata",
query = list(
year=2023,
month=6,
day = 4,
cc='ua',
pre=1
))
httr::http_error(ans)
ans <- httr::GET("https://isdayoff.ru/api/getdata",
query = list(
year=2023,
month=16,
day = 4,
cc='ua',
pre=1
))
httr::http_error(ans)
httr::http_date(ans)
httr::http_condition(ans)
httr::http_error(ans)
ans <- httr::GET("https://isdayoff.ru/api/getdata",
query = list(
year=2023,
month=6,
day = 4,
cc='ua',
pre=1
))
httr::content(ans, encoding = "UTF-8")
library(usethis)
use_version('patch')
library(usethis)
use_version('patch')
use_cran_comments()
use_github_release()
check)
check())
check()
library(devtools)
check()
library(devtools)
check()
devtools::load_all(".")
last2quarters_2 <- last_n_quarters(n = 2, include_current = TRUE)
last2quarters_2 <- last_n_quarters()
last2quarters_2
last2quarters_2 <- last_n_quarters(n = 2)
last2quarters_2
last2quarters_2 <- last_n_quarters(n = 2, include_current = T)
x = Sys.Date()
n = 1
part = getOption("timeperiodsR.parts")
include_current = F
if ( ! "Date" %in% class(x) ) {
x <- as.Date(x)
}
start <- floor_date( x, unit = "quarter" ) - months(3 * n)
stop  <- start + months(3 * n) - days(1) + months(ifelse( isTRUE(include_current), 3, 0))
out   <- custom_period(start, stop)
part <- match.arg(part, getOption("timeperiodsR.parts"))
if ( part == "all" ) {
return(out)
} else {
return(out[[part]])
}
n=2
include_current = T
if ( ! "Date" %in% class(x) ) {
x <- as.Date(x)
}
start <- floor_date( x, unit = "quarter" ) - months(3 * n)
stop  <- start + months(3 * n) - days(1) + months(ifelse( isTRUE(include_current), 3, 0))
out   <- custom_period(start, stop)
out   <- custom_period(start, stop)
start
stop
start
start + months(3 * n)
start + months(3 * n) - days(1)
ifelse( isTRUE(include_current), 3, 0)
months(ifelse( isTRUE(include_current), 3, 0))
start + months(3 * n) - days(1) + months(ifelse( isTRUE(include_current), 3, 0))
start + months(3 * n) - days(1)
ifelse( isTRUE(include_current), 3, 0)
stop  <- start + months(3 * n) - days(1)
stop + months(3)
months(3)
floor_date( x, unit = "quarter" )
floor_date( x, unit = "quarter" ) - months(3 * n)
stop - months(3)
stop + months(2)
stop + months(3)
stop + months(3)
stop
stop + months(1)
stop + lubridate::months(3)
lubridate::months(3)
lubridate::dmonths(3)
stop + lubridate::dmonths(3)
stop  <- start + months(3 * n) - days(1) + dmonths(ifelse( isTRUE(include_current), 3, 0))
devtools::load_all(".")
stop  <- start + months(3 * n) - days(1) + dmonths(ifelse( isTRUE(include_current), 3, 0))
stop
out   <- custom_period(start, stop)
out
check()
?inherits()
devtools::load_all(".")
check()
check()
check()
use_version('minor')
build_vignettes()
edit_file('NEWS.md')
use_github_release()
release()
use_cran_comments()
release()
library(devtools)
use_version('patch')
edit_file('NEWS.md')
use_cran_comments()
release()
